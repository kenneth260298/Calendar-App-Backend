{"version":3,"sources":["helpers/fetch.js","types/types.js","helpers/prepareEvents.js","actions/events.js","actions/auth.js","hooks/useForm.js","components/auth/LoginScreen.js","components/ui/Navbar.js","helpers/calendar-messages.js","components/calendar/CalendarEvent.js","actions/ui.js","components/calendar/CalendarModal.js","components/ui/AddNewFab.js","components/ui/DeleteEventFab.js","components/calendar/CalendarScreen.js","router/PrivateRoute.js","router/PublicRoute.js","router/AppRouter.js","reducers/authReducer.js","reducers/calendarReducer.js","reducers/uiReducer.js","reducers/rootReducer.js","store/store.js","CalendarApp.js","index.js"],"names":["baseUrl","process","fetchWithoutToken","endpoint","data","method","url","fetch","headers","body","JSON","stringify","fetchWithToken","token","localStorage","getItem","types","prepareEvents","events","map","e","start","moment","toDate","end","eventAddNew","event","type","payload","eventClearActiveEvent","eventUpdated","eventDeleted","eventLoaded","checkingFinish","login","user","startLogout","dispatch","clear","useForm","initialState","useState","values","setValues","reset","handleInputChange","target","name","value","LoginScreen","useDispatch","lEmail","lPassword","formLoginValues","handleLoginInputChange","rName","rEmail","rPassword1","rPassword2","formRegisterValues","handleRegisterInputChange","className","onSubmit","email","password","preventDefault","a","response","json","ok","setItem","Date","getTime","uid","Swal","fire","msg","placeholder","onChange","Navbar","useSelector","state","auth","onClick","messages","allDay","previous","next","today","month","week","day","agenda","date","time","noEventsInRange","showMore","total","CalendarEvent","title","uiOpenModal","customStyles","content","top","left","right","bottom","marginRight","transform","Modal","setAppElement","now","minutes","seconds","add","nowPlus1","initEvent","notes","CalendarModal","dateStart","setDateStart","dateEnd","setDateEnd","validTitle","setValidTitle","formValues","setFormValues","modalOpen","ui","activeEvent","calendar","useEffect","closeModal","isOpen","onRequestClose","style","closeTimeoutMS","overlayClassName","momentStart","momentEnd","isSameOrAfter","trim","length","id","console","log","getState","_id","eventStartAddNew","minDate","autoComplete","rows","AddNewFab","DeleteEventFab","locale","localizer","momentLocalizer","CalendarScreen","lastView","setLastView","startAccessor","endAccessor","eventPropGetter","isSelected","backgroundColor","borderRadius","opacity","display","color","components","onDoubleClickEvent","onSelectEvent","onView","onSelectSlot","selectable","view","PrivateRoute","isAuthenticated","Component","component","rest","props","to","PublicRoute","AppRouter","checking","exact","path","rootReducer","combineReducers","action","filter","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","applyMiddleware","thunk","CalendarApp","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.9b943a2c.chunk.js","sourcesContent":["const baseUrl = process.env.REACT_APP_API;\r\n\r\n\r\nconst fetchWithoutToken = (endpoint, data, method = 'GET') => {\r\n\r\n    const url = `${baseUrl}/${endpoint}`\r\n\r\n    if (method === 'GET') {\r\n        return fetch(url);\r\n    } else {\r\n        return fetch(url, {\r\n            method,\r\n            headers: {\r\n                'Content-type': 'application/json'\r\n            },\r\n            body: JSON.stringify(data)\r\n        })\r\n    }\r\n}\r\n\r\nconst fetchWithToken = (endpoint, data, method = 'GET') => {\r\n\r\n    const url = `${baseUrl}/${endpoint}`\r\n    const token = localStorage.getItem('token') || '';\r\n\r\n    if (method === 'GET') {\r\n        return fetch(url, {\r\n            method,\r\n            headers: {\r\n                'x-token': token\r\n            }\r\n        });\r\n    } else {\r\n        return fetch(url, {\r\n            method,\r\n            headers: {\r\n                'Content-type': 'application/json',\r\n                'x-token': token\r\n            },\r\n            body: JSON.stringify(data)\r\n        })\r\n    }\r\n}\r\n\r\nexport {\r\n    fetchWithoutToken,\r\n    fetchWithToken\r\n}","export const types = {\r\n    //ui\r\n    uiOpenModal: '[ui] Open modal',\r\n    uiCloseModal: '[ui] Close modal',\r\n    //event\r\n    eventSetActive: '[event] Set active',\r\n    eventLogout : '[event] Event Logout',\r\n    eventStarAddNew :'[event] Start add new',\r\n    eventAddNew: '[event] Add new',\r\n    eventClearActiveEvent: '[event] Clear active event',\r\n    eventUpdated: '[event] Event updated',\r\n    eventDeleted: '[event] Event deleted',\r\n    eventLoaded : '[event] Events loaded',\r\n    //auth\r\n    authChecking: '[auth] Checking login state',\r\n    authCheckingFinish: '[auth] Finish checking login state',\r\n    authStartLogin: '[auth] Start login',\r\n    authLogin: '[auth] Login',\r\n    authStartRegister: '[auth] Start register',\r\n    authStartTokenRenew: '[auth] Start token renew',\r\n    authLogout: '[auth] Logout',\r\n\r\n}","import moment from 'moment';\r\n\r\nexport const prepareEvents = (events = []) => {\r\n\r\n    return events.map((e) => ({\r\n        ...e,\r\n        start: moment(e.start).toDate(),\r\n        end: moment(e.end).toDate()\r\n    }));\r\n}","import Swal from \"sweetalert2\";\r\nimport { fetchWithToken } from \"../helpers/fetch\";\r\nimport { prepareEvents } from \"../helpers/prepareEvents\";\r\nimport { types } from \"../types/types\";\r\n\r\n\r\nexport const eventStartAddNew = (event) => {\r\n    return async (dispatch, getState) => {\r\n\r\n        const { uid, name } = getState().auth;\r\n\r\n        try {\r\n            const response = await fetchWithToken('events', event, 'POST');\r\n            const body = await response.json();\r\n\r\n            if (body.ok) {\r\n                event.id = body.event.id;\r\n                event.user = {\r\n                    _id: uid,\r\n                    name\r\n                };\r\n                dispatch(eventAddNew(event));\r\n            }\r\n\r\n        } catch (error) {\r\n            console.log(error);\r\n        }\r\n    }\r\n}\r\n\r\nconst eventAddNew = (event) => ({\r\n    type: types.eventAddNew,\r\n    payload: event\r\n})\r\n\r\nexport const eventSetActive = (event) => ({\r\n    type: types.eventSetActive,\r\n    payload: event\r\n})\r\n\r\nexport const eventClearActiveEvent = () => ({\r\n    type: types.eventClearActiveEvent\r\n})\r\n\r\nexport const eventStartUpdate = (event) => {\r\n    return async (dispatch) => {\r\n        try {\r\n            const response = await fetchWithToken(`events/${event.id}`, event, 'PUT');\r\n            const body = await response.json();\r\n\r\n            if (body.ok) {\r\n                dispatch(eventUpdated(event));\r\n            } else {\r\n                Swal.fire('Error', body.msg, 'error');\r\n            }\r\n        } catch (error) {\r\n            console.log(error);\r\n        }\r\n    }\r\n}\r\n\r\nconst eventUpdated = (event) => ({\r\n    type: types.eventUpdated,\r\n    payload: event\r\n})\r\n\r\nexport const eventStartDelete = () => {\r\n    return async (dispatch, getState) => {\r\n        const { id } = getState().calendar.activeEvent;\r\n        try {\r\n            const response = await fetchWithToken(`events/${id}`, {}, 'DELETE');\r\n            const body = await response.json();\r\n\r\n            if (body.ok) {\r\n                dispatch(eventDeleted());\r\n            } else {\r\n                Swal.fire('Error', body.msg, 'error');\r\n            }\r\n        } catch (error) {\r\n            console.log(error);\r\n        }\r\n    }\r\n}\r\n\r\nconst eventDeleted = () => ({\r\n    type: types.eventDeleted\r\n})\r\n\r\nexport const eventStartLoading = () => {\r\n    return async (dispatch) => {\r\n        try {\r\n            const response = await fetchWithToken('events');\r\n            const body = await response.json();\r\n\r\n            if (body.ok) {\r\n                const events = prepareEvents(body.events);\r\n                dispatch(eventLoaded(events));\r\n            }\r\n\r\n        } catch (error) {\r\n            console.log(error);\r\n        }\r\n    }\r\n}\r\n\r\nconst eventLoaded = (events) => ({\r\n    type: types.eventLoaded,\r\n    payload: events\r\n})\r\n\r\nexport const eventLogout = () => ({\r\n    type: types.eventLogout\r\n})","import { fetchWithoutToken, fetchWithToken } from \"../helpers/fetch\"\r\nimport { types } from \"../types/types\";\r\nimport Swal from 'sweetalert2'\r\nimport { eventLogout } from \"./events\";\r\n\r\n\r\nexport const startLogin = (email, password) => {\r\n\r\n    return async (dispatch) => {\r\n\r\n        const response = await fetchWithoutToken('auth', { email, password }, 'POST');\r\n        const body = await response.json();\r\n\r\n        if (body.ok) {\r\n            localStorage.setItem('token', body.token);\r\n            localStorage.setItem('token-init-date', new Date().getTime());\r\n            const { uid, name } = body;\r\n            dispatch(login({ uid, name }));\r\n        } else {\r\n            Swal.fire('Error', body.msg, 'error');\r\n        }\r\n    }\r\n}\r\n\r\nexport const startRegister = (email, password, name) => {\r\n\r\n    return async (dispatch) => {\r\n        const response = await fetchWithoutToken('auth/new', { email, password, name }, 'POST');\r\n        const body = await response.json();\r\n\r\n        if (body.ok) {\r\n            localStorage.setItem('token', body.token);\r\n            localStorage.setItem('token-init-date', new Date().getTime());\r\n\r\n            const { uid, name } = body;\r\n            dispatch(login({ uid, name }));\r\n        } else {\r\n            Swal.fire('Error', body.msg, 'error');\r\n        }\r\n    }\r\n}\r\n\r\nexport const startChecking = () => {\r\n    return async (dispatch) => {\r\n        const response = await fetchWithToken('auth/renew');\r\n        const body = await response.json();\r\n\r\n        if (body.ok) {\r\n            localStorage.setItem('token', body.token);\r\n            localStorage.setItem('token-init-date', new Date().getTime());\r\n\r\n            const { uid, name } = body;\r\n            dispatch(login({ uid, name }));\r\n        } else {\r\n            dispatch(checkingFinish());\r\n        }\r\n    }\r\n}\r\n\r\nconst checkingFinish = () => ({\r\n    type: types.authCheckingFinish\r\n})\r\n\r\nconst login = (user) => ({\r\n    type: types.authLogin,\r\n    payload: user\r\n})\r\nconst logout = () => ({\r\n    type: types.authLogout\r\n})\r\n\r\nexport const startLogout = () => {\r\n    return (dispatch) => {\r\n        localStorage.clear();\r\n        dispatch(logout());\r\n        dispatch(eventLogout());\r\n    }\r\n}","import { useState } from 'react';\r\n\r\n\r\nexport const useForm = ( initialState = {} ) => {\r\n    \r\n    const [values, setValues] = useState(initialState);\r\n\r\n    const reset = () => {\r\n        setValues( initialState );\r\n    }\r\n\r\n\r\n    const handleInputChange = ({ target }) => {\r\n\r\n        setValues({\r\n            ...values,\r\n            [ target.name ]: target.value\r\n        });\r\n\r\n    }\r\n\r\n    return [ values, handleInputChange, reset ];\r\n\r\n}\r\n","import React from 'react';\r\nimport { useDispatch } from 'react-redux';\r\nimport Swal from 'sweetalert2';\r\nimport { startLogin, startRegister } from '../../actions/auth';\r\nimport { useForm } from '../../hooks/useForm';\r\nimport './login.css';\r\n\r\nexport const LoginScreen = () => {\r\n\r\n    const dispatch = useDispatch();\r\n    const [formLoginValues, handleLoginInputChange] = useForm({\r\n        lEmail: 'k.lopez2698@gmail.com',\r\n        lPassword: '123456'\r\n    });\r\n    const [formRegisterValues, handleRegisterInputChange] = useForm({\r\n        rName: 'Kenneth',\r\n        rEmail: 'k.lopez2698@gmail.com',\r\n        rPassword1: '123456',\r\n        rPassword2: '123456'\r\n    });\r\n\r\n    const { lEmail, lPassword } = formLoginValues;\r\n    const { rName, rEmail, rPassword1, rPassword2, } = formRegisterValues;\r\n\r\n    const handleLogin = (e) => {\r\n        e.preventDefault();\r\n        dispatch(startLogin(lEmail, lPassword));\r\n    }\r\n\r\n    const handleRegister = (e) => {\r\n        e.preventDefault();\r\n        if (rPassword1 !== rPassword2) {\r\n            return Swal.fire('Error', 'Passwords must be the same', 'error');\r\n        }\r\n        dispatch(startRegister(rEmail, rPassword1, rName));\r\n    }\r\n\r\n    return (\r\n        <div className=\"container login-container\">\r\n            <div className=\"row\">\r\n                <div className=\"col-md-6 login-form-1\">\r\n                    <h3>Ingreso</h3>\r\n                    <form onSubmit={handleLogin}>\r\n                        <div className=\"form-group\">\r\n                            <input\r\n                                type=\"text\"\r\n                                className=\"form-control\"\r\n                                placeholder=\"Correo\"\r\n                                name=\"lEmail\"\r\n                                value={lEmail}\r\n                                onChange={handleLoginInputChange}\r\n                            />\r\n                        </div>\r\n                        <div className=\"form-group\">\r\n                            <input\r\n                                type=\"password\"\r\n                                className=\"form-control\"\r\n                                placeholder=\"Contraseña\"\r\n                                name=\"lPassword\"\r\n                                value={lPassword}\r\n                                onChange={handleLoginInputChange}\r\n                            />\r\n                        </div>\r\n                        <div className=\"form-group\">\r\n                            <input\r\n                                type=\"submit\"\r\n                                className=\"btnSubmit\"\r\n                                value=\"Login\"\r\n                            />\r\n                        </div>\r\n                    </form>\r\n                </div>\r\n\r\n                <div className=\"col-md-6 login-form-2\">\r\n                    <h3>Registro</h3>\r\n                    <form onSubmit={handleRegister}>\r\n                        <div className=\"form-group\">\r\n                            <input\r\n                                type=\"text\"\r\n                                className=\"form-control\"\r\n                                placeholder=\"Nombre\"\r\n                                value={rName}\r\n                                onChange={handleRegisterInputChange}\r\n                                name=\"rName\"\r\n                            />\r\n                        </div>\r\n                        <div className=\"form-group\">\r\n                            <input\r\n                                type=\"email\"\r\n                                className=\"form-control\"\r\n                                placeholder=\"Correo\"\r\n                                value={rEmail}\r\n                                onChange={handleRegisterInputChange}\r\n                                name=\"rEmail\"\r\n                            />\r\n                        </div>\r\n                        <div className=\"form-group\">\r\n                            <input\r\n                                type=\"password\"\r\n                                className=\"form-control\"\r\n                                placeholder=\"Contraseña\"\r\n                                value={rPassword1}\r\n                                onChange={handleRegisterInputChange}\r\n                                name=\"rPassword1\"\r\n                            />\r\n                        </div>\r\n\r\n                        <div className=\"form-group\">\r\n                            <input\r\n                                type=\"password\"\r\n                                className=\"form-control\"\r\n                                placeholder=\"Repita la contraseña\"\r\n                                value={rPassword2}\r\n                                onChange={handleRegisterInputChange}\r\n                                name=\"rPassword2\"\r\n                            />\r\n                        </div>\r\n\r\n                        <div className=\"form-group\">\r\n                            <input\r\n                                type=\"submit\"\r\n                                className=\"btnSubmit\"\r\n                                value=\"Crear cuenta\" />\r\n                        </div>\r\n                    </form>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { startLogout } from '../../actions/auth';\r\n\r\nexport const Navbar = () => {\r\n\r\n    const { name } = useSelector(state => state.auth)\r\n    const dispatch = useDispatch();\r\n\r\n    const handleExitClick = () => {\r\n        dispatch(startLogout());\r\n    }\r\n\r\n    return (\r\n        <div className=\"navbar navbar-dark bg-dark mb-4\">\r\n            <span className=\"navbar-brand\">\r\n                {name}\r\n            </span>\r\n            <button onClick={handleExitClick} className=\"btn btn-danger\">\r\n                <i className=\"fas fa-sign-out-alt\"></i>\r\n                <span> Salir</span>\r\n            </button>\r\n        </div>\r\n    )\r\n}\r\n","export const messages = {\r\n    allDay: 'Todo el día',\r\n    previous: '<',\r\n    next: '>',\r\n    today: 'Hoy',\r\n    month: 'Mes',\r\n    week: 'Semana',\r\n    day: 'Día',\r\n    agenda: 'Agenda',\r\n    date: 'Fecha',\r\n    time: 'Hora',\r\n    event: 'Evento',\r\n    noEventsInRange: 'No hay eventos en este rango',\r\n    showMore: total => `+ Ver más (${total})`\r\n};","import React from 'react'\r\n\r\nexport const CalendarEvent = ({ event }) => {\r\n\r\n    const { title} = event;\r\n\r\n    return (\r\n        <div>\r\n            <strong>{title}</strong>\r\n        </div>\r\n    )\r\n}\r\n","import { types } from \"../types/types\"\r\n\r\nexport const uiOpenModal = () => ({\r\n    type: types.uiOpenModal\r\n})\r\n\r\n\r\nexport const uiCloseModal = () => ({\r\n    type: types.uiCloseModal\r\n})","import React, { useEffect, useState } from 'react';\r\n\r\nimport moment from 'moment';\r\nimport Modal from 'react-modal';\r\nimport DateTimePicker from 'react-datetime-picker';\r\nimport Swal from 'sweetalert2'\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { uiCloseModal } from '../../actions/ui';\r\nimport {  eventClearActiveEvent, eventStartAddNew, eventStartUpdate } from '../../actions/events';\r\nconst customStyles = {\r\n    content: {\r\n        top: '50%',\r\n        left: '50%',\r\n        right: 'auto',\r\n        bottom: 'auto',\r\n        marginRight: '-50%',\r\n        transform: 'translate(-50%, -50%)',\r\n    },\r\n};\r\nModal.setAppElement('#root');\r\n\r\nconst now = moment().minutes(0).seconds(0).add(1, 'hours');\r\nconst nowPlus1 = moment().minutes(0).seconds(0).add(2, 'hours');\r\n\r\nconst initEvent = {\r\n    title: '',\r\n    notes: '',\r\n    start: now.toDate(),\r\n    end: nowPlus1.toDate(),\r\n}\r\n\r\nexport const CalendarModal = () => {\r\n\r\n    const [dateStart, setDateStart] = useState(now.toDate());\r\n    const [dateEnd, setDateEnd] = useState(nowPlus1.toDate());\r\n    const [validTitle, setValidTitle] = useState(true);\r\n    const [formValues, setFormValues] = useState(initEvent);\r\n    const dispatch = useDispatch();\r\n    const { modalOpen } = useSelector(state => state.ui);\r\n    const { activeEvent } = useSelector(state => state.calendar);\r\n    const { notes, title, start, end } = formValues;\r\n\r\n    useEffect(() => {\r\n        if (activeEvent) {\r\n            setFormValues(activeEvent);\r\n        } else {\r\n            setFormValues(initEvent);\r\n        }\r\n\r\n    }, [activeEvent, setFormValues])\r\n\r\n    const handleInputChange = ({ target }) => {\r\n        setFormValues({\r\n            ...formValues,\r\n            [target.name]: target.value\r\n        })\r\n    }\r\n\r\n    const closeModal = () => {\r\n        dispatch(uiCloseModal());\r\n        dispatch(eventClearActiveEvent());\r\n        setFormValues(initEvent);\r\n    }\r\n\r\n    const handleStartDateChange = (e) => {\r\n        setDateStart(e);\r\n        setFormValues({\r\n            ...formValues,\r\n            start: e\r\n        })\r\n    }\r\n\r\n    const handleEndDateChange = (e) => {\r\n        setDateEnd(e)\r\n        setFormValues({\r\n            ...formValues,\r\n            end: e\r\n        })\r\n    }\r\n\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault();\r\n\r\n        const momentStart = moment(start);\r\n        const momentEnd = moment(end);\r\n\r\n        if (momentStart.isSameOrAfter(momentEnd)) {\r\n\r\n            Swal.fire('Error', 'La fecha fin debe ser mayor a la fecha inicio', 'error');\r\n            return;\r\n        };\r\n        if (title.trim().length < 2) {\r\n            setValidTitle(false);\r\n            return;\r\n        }\r\n\r\n        if (activeEvent) {\r\n            dispatch(eventStartUpdate(formValues));\r\n        } else {\r\n            dispatch(eventStartAddNew(formValues));\r\n        };\r\n\r\n        setValidTitle(true);\r\n        closeModal();\r\n\r\n    }\r\n\r\n    return (\r\n        <Modal\r\n            isOpen={modalOpen}\r\n            // onAfterOpen={afterOpenModal}\r\n            onRequestClose={closeModal}\r\n            style={customStyles}\r\n            closeTimeoutMS={200}\r\n            className=\"modal\"\r\n            overlayClassName=\"modal-fondo\"\r\n        >\r\n            <h1> {activeEvent ? 'Actualizar Evento' : 'Nuevo Evento'} </h1>\r\n            <hr />\r\n            <form onSubmit={handleSubmit} className=\"container\">\r\n\r\n                <div className=\"form-group\">\r\n                    <label>Fecha y hora inicio</label>\r\n                    ''    <DateTimePicker\r\n                        onChange={handleStartDateChange}\r\n                        value={dateStart}\r\n                        className=\"form-control\"\r\n                    />\r\n                </div>\r\n\r\n                <div className=\"form-group\">\r\n                    <label>Fecha y hora fin</label>\r\n                    <DateTimePicker\r\n                        minDate={dateStart}\r\n                        onChange={handleEndDateChange}\r\n                        value={dateEnd}\r\n                        className=\"form-control\"\r\n                    />\r\n                </div>\r\n\r\n                <hr />\r\n                <div className=\"form-group\">\r\n                    <label>Titulo y notas</label>\r\n                    <input\r\n                        type=\"text\"\r\n                        className={`form-control ${!validTitle && 'is-invalid'}`}\r\n                        placeholder=\"Título del evento\"\r\n                        name=\"title\"\r\n                        autoComplete=\"off\"\r\n                        value={title}\r\n                        onChange={handleInputChange}\r\n                    />\r\n                    <small id=\"emailHelp\" className=\"form-text text-muted\">Una descripción corta</small>\r\n                </div>\r\n\r\n                <div className=\"form-group\">\r\n                    <textarea\r\n                        type=\"text\"\r\n                        className=\"form-control\"\r\n                        placeholder=\"Notas\"\r\n                        rows=\"5\"\r\n                        name=\"notes\"\r\n                        value={notes}\r\n                        onChange={handleInputChange}\r\n                    ></textarea>\r\n                    <small id=\"emailHelp\" className=\"form-text text-muted\">Información adicional</small>\r\n                </div>\r\n\r\n                <button\r\n                    type=\"submit\"\r\n                    className=\"btn btn-outline-primary btn-block\"\r\n                >\r\n                    <i className=\"far fa-save\"></i>\r\n                    <span> Guardar</span>\r\n                </button>\r\n\r\n            </form>\r\n        </Modal>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport { useDispatch } from 'react-redux';\r\nimport { uiOpenModal } from '../../actions/ui';\r\n\r\nexport const AddNewFab = () => {\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    const handleClick = () => {\r\n        dispatch(uiOpenModal());\r\n    }\r\n\r\n    return (\r\n        <button\r\n            className=\"btn btn-primary fab\"\r\n            onClick={handleClick}\r\n        >\r\n            <i className=\"fas fa-plus\"></i>\r\n        </button>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport { useDispatch } from 'react-redux';\r\nimport { eventStartDelete } from '../../actions/events';\r\n\r\nexport const DeleteEventFab = () => {\r\n\r\n    const dispatch = useDispatch();\r\n    \r\n    const handleClick = () => {\r\n        dispatch(eventStartDelete());\r\n    }\r\n\r\n    return (\r\n        <button\r\n            className=\"btn btn-danger fab-danger\"\r\n            onClick={handleClick}\r\n        >\r\n            <i className=\"fas fa-trash\"></i>\r\n            <span> Borrar Evento</span>\r\n        </button>\r\n    )\r\n}\r\n","import React, { useState, useEffect } from 'react';\r\nimport { Calendar, momentLocalizer } from 'react-big-calendar';\r\nimport moment from 'moment';\r\nimport 'moment/locale/es';\r\nimport { Navbar } from '../ui/Navbar';\r\nimport { messages } from '../../helpers/calendar-messages';\r\n\r\nimport 'react-big-calendar/lib/css/react-big-calendar.css';\r\nimport { CalendarEvent } from './CalendarEvent';\r\nimport { CalendarModal } from './CalendarModal';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { uiOpenModal } from '../../actions/ui';\r\nimport { eventClearActiveEvent, eventSetActive, eventStartLoading } from '../../actions/events';\r\nimport { AddNewFab } from '../ui/AddNewFab';\r\nimport { DeleteEventFab } from '../ui/DeleteEventFab';\r\n\r\nmoment.locale('es');\r\n\r\nconst localizer = momentLocalizer(moment);\r\n\r\nexport const CalendarScreen = () => {\r\n\r\n    const [lastView, setLastView] = useState(localStorage.getItem('lastView') || 'month');\r\n    const dispatch = useDispatch();\r\n    const { events, activeEvent } = useSelector(state => state.calendar);\r\n    const { uid } = useSelector(state => state.auth);\r\n    const onDoubleClick = (e) => {\r\n        dispatch(uiOpenModal());\r\n    }\r\n\r\n    useEffect(() => {\r\n        dispatch(eventStartLoading())\r\n    }, [dispatch]);\r\n\r\n    const onSelectEvent = (e) => {\r\n        dispatch(eventSetActive(e))\r\n    }\r\n\r\n    const onViewChange = (e) => {\r\n        localStorage.setItem('lastView', e);\r\n        setLastView(e);\r\n    }\r\n    const onSelectSlot = (e) => {\r\n        dispatch(eventClearActiveEvent());\r\n    }\r\n    const eventStyleGetter = (event, start, end, isSelected) => {\r\n\r\n        const style = {\r\n            backgroundColor: (uid === event.user._id) ? '#367CF7' : '#465660',\r\n            borderRadius: '0px',\r\n            opacity: 0.8,\r\n            display: 'block',\r\n            color: 'white'\r\n        }\r\n\r\n        return {\r\n            style\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div className=\"calendar-screen\">\r\n            <Navbar />\r\n            <Calendar\r\n                localizer={localizer}\r\n                events={events}\r\n                startAccessor=\"start\"\r\n                endAccessor=\"end\"\r\n                messages={messages}\r\n                eventPropGetter={eventStyleGetter}\r\n                components={{\r\n                    event: CalendarEvent\r\n                }}\r\n                onDoubleClickEvent={onDoubleClick}\r\n                onSelectEvent={onSelectEvent}\r\n                onView={onViewChange}\r\n                onSelectSlot={onSelectSlot}\r\n                selectable={true}\r\n                view={lastView}\r\n            />\r\n            <AddNewFab />\r\n            {\r\n                activeEvent && <DeleteEventFab />\r\n            }\r\n            <CalendarModal />\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport { Route, Redirect } from 'react-router-dom';\n\n\nexport const PrivateRoute = ({\n    isAuthenticated,\n    component: Component,\n    ...rest\n}) => {\n\n    return (\n        <Route { ...rest }\n            component={ (props) => (\n                ( isAuthenticated )\n                    ? ( <Component { ...props } /> )\n                    : ( <Redirect to=\"/login\" /> )\n            )}\n        \n        />\n    )\n}\n\nPrivateRoute.propTypes = {\n    isAuthenticated: PropTypes.bool.isRequired,\n    component: PropTypes.func.isRequired\n}\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport { Route, Redirect } from 'react-router-dom';\n\n\nexport const PublicRoute = ({\n    isAuthenticated,\n    component: Component,\n    ...rest\n}) => {\n\n    return (\n        <Route { ...rest }\n            component={ (props) => (\n                ( isAuthenticated )\n                    ? ( <Redirect to=\"/\" /> )\n                    : ( <Component { ...props } /> )\n            )}\n        \n        />\n    )\n}\n\nPublicRoute.propTypes = {\n    isAuthenticated: PropTypes.bool.isRequired,\n    component: PropTypes.func.isRequired\n}\n","import React, { useEffect } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { BrowserRouter as Router, Switch, Redirect } from 'react-router-dom';\r\nimport { startChecking } from '../actions/auth';\r\nimport { LoginScreen } from '../components/auth/LoginScreen';\r\nimport { CalendarScreen } from '../components/calendar/CalendarScreen';\r\nimport { PrivateRoute } from './PrivateRoute';\r\nimport { PublicRoute } from './PublicRoute';\r\n\r\nexport const AppRouter = () => {\r\n\r\n    const dispatch = useDispatch();\r\n    const { checking, uid } = useSelector(state => state.auth);\r\n\r\n    useEffect(() => {\r\n        dispatch(startChecking());\r\n\r\n    }, [dispatch])\r\n\r\n    if (checking) {\r\n        return <h1>Please wait...</h1>\r\n    }\r\n    return (\r\n        <Router>\r\n            <Switch>\r\n                <PublicRoute\r\n                    exact\r\n                    path=\"/login\"\r\n                    component={LoginScreen}\r\n                    isAuthenticated={!!uid}\r\n                />\r\n\r\n                <PrivateRoute\r\n                    exact\r\n                    path=\"/\"\r\n                    component={CalendarScreen}\r\n                    isAuthenticated={!!uid}\r\n                />\r\n\r\n                <Redirect to=\"/\" />\r\n            </Switch>\r\n        </Router>\r\n    )\r\n}\r\n","import { types } from \"../types/types\"\r\n\r\nconst initialState = {\r\n    checking: true,\r\n    // uid : null,\r\n    // name : null\r\n}\r\n\r\nexport const authReducer = (state = initialState, action) => {\r\n\r\n    switch (action.type) {\r\n\r\n        case types.authLogin:\r\n            return {\r\n                ...state,\r\n                ...action.payload,\r\n                checking: false\r\n            }\r\n\r\n        case types.authCheckingFinish:\r\n            return {\r\n                ...state,\r\n                checking: false\r\n            }\r\n\r\n        case types.authLogout:\r\n            return {\r\n                checking: false\r\n            }\r\n\r\n        default:\r\n            return state\r\n    }\r\n\r\n}","import { types } from \"../types/types\";\r\n\r\n// {\r\n//     id: new Date().getTime(),\r\n//     title: 'Navidad',\r\n//     start: moment().toDate(),\r\n//     end: moment().add(2, 'hours').toDate(),\r\n//     user: {\r\n//         id: 123,\r\n//         name: 'Kenneth'\r\n//     }\r\n// }\r\n\r\nconst initialState = {\r\n    events: [],\r\n    activeEvent: null\r\n}\r\n\r\nexport const calendarReducer = (state = initialState, action) => {\r\n\r\n    switch (action.type) {\r\n        case types.eventSetActive:\r\n\r\n            return {\r\n                ...state,\r\n                activeEvent: action.payload\r\n            }\r\n\r\n        case types.eventAddNew:\r\n\r\n            return {\r\n                ...state,\r\n                events: [\r\n                    ...state.events,\r\n                    action.payload\r\n                ]\r\n            }\r\n\r\n        case types.eventClearActiveEvent:\r\n\r\n            return {\r\n                ...state,\r\n                activeEvent: null\r\n            }\r\n\r\n        case types.eventUpdated:\r\n            return {\r\n                ...state,\r\n                events: state.events.map(\r\n                    e =>\r\n                        (e.id === action.payload.id)\r\n                            ? action.payload\r\n                            : e\r\n                )\r\n            };\r\n\r\n        case types.eventDeleted:\r\n            return {\r\n                ...state,\r\n                events: state.events.filter(\r\n                    e => (e.id !== state.activeEvent.id)\r\n                ),\r\n                activeEvent: null\r\n            };\r\n\r\n        case types.eventLoaded:\r\n            return {\r\n                ...state,\r\n                events: [...action.payload]\r\n            }\r\n\r\n        case types.eventLogout:\r\n            return {\r\n                ...initialState\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n\r\n}","import { types } from \"../types/types\";\r\n\r\nconst initialState = {\r\n    modalOpen: false\r\n};\r\n\r\n\r\nexport const uiReducer = (state = initialState, action) => {\r\n\r\n\r\n    switch (action.type) {\r\n        case types.uiOpenModal:\r\n            return {\r\n                ...state,\r\n                modalOpen: true\r\n            };\r\n\r\n        case types.uiCloseModal:\r\n            return {\r\n                ...state,\r\n                modalOpen: false\r\n            };\r\n        default:\r\nreturn state;\r\n    }\r\n\r\n}","import { combineReducers } from \"redux\";\r\nimport { authReducer } from \"./authReducer\";\r\nimport { calendarReducer } from \"./calendarReducer\";\r\nimport { uiReducer } from \"./uiReducer\";\r\n\r\n\r\n\r\nexport const rootReducer = combineReducers({\r\n    ui: uiReducer,\r\n    calendar: calendarReducer,\r\n    auth: authReducer\r\n    //TODO CalendarReducer\r\n})","import { applyMiddleware, compose, createStore } from \"redux\";\r\nimport thunk from \"redux-thunk\";\r\nimport { rootReducer } from \"../reducers/rootReducer\";\r\n\r\n\r\nconst composeEnhancers = (typeof window !== 'undefined' && window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__) || compose;\r\n\r\nexport const store = createStore(\r\n    rootReducer,\r\n    composeEnhancers(\r\n        applyMiddleware(thunk)\r\n    )\r\n)","import React from 'react';\r\nimport { Provider } from 'react-redux';\r\nimport { AppRouter } from './router/AppRouter';\r\nimport { store } from './store/store';\r\n\r\nexport const CalendarApp = () => {\r\n    return (\r\n        <Provider store={store}>\r\n            <AppRouter />\r\n        </Provider>\r\n\r\n    )\r\n}\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { CalendarApp } from './CalendarApp';\nimport './styles.css';\n\n\n\nReactDOM.render(\n  <CalendarApp />,\n  document.getElementById('root')\n);"],"sourceRoot":""}